# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [push, pull_request]

name: Test-Suite

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Add GPG key
        run: sudo apt-key adv --fetch-key https://repo.arrayfire.com/GPG-PUB-KEY-ARRAYFIRE-2020.PUB 
        
      - name: Include arrayfire repo
        run: sudo echo "deb [arch=amd64] https://repo.arrayfire.com/debian all main" | sudo tee /etc/apt/sources.list.d/arrayfire.list

      - name: Refresh repo information
        run: sudo apt-get update
        
      - name: Install Arrayfire
        run: sudo apt install -y gnupg ca-certificates apt software-properties-common arrayfire

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Add GPG key
        run: sudo apt-key adv --fetch-key https://repo.arrayfire.com/GPG-PUB-KEY-ARRAYFIRE-2020.PUB 
        
      - name: Include arrayfire repo
        run: sudo echo "deb [arch=amd64] https://repo.arrayfire.com/debian all main" | sudo tee /etc/apt/sources.list.d/arrayfire.list

      - name: Refresh repo information
        run: sudo apt-get update
        
      - name: Install Arrayfire
        run: sudo apt install -y gnupg ca-certificates apt software-properties-common arrayfire

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

#   lints:
#     name: Lints
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@v2
# 
#       - name: Install stable toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true
#           components: rustfmt, clippy
# 
#       - name: Run cargo fmt
#         uses: actions-rs/cargo@v1
#         with:
#           command: fmt
#           args: --all -- --check
# 
#       - name: Run cargo clippy
#         uses: actions-rs/cargo@v1
#         with:
#           command: clippy
#           args: -- -D warnings
